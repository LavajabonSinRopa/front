.button {
  width: 60px; /* Ajusta el tamaño del cuadrado */
  height: 60px; /* Ajusta el tamaño del cuadrado */
  border: none;
  color: white; /* Color del texto */
  font-size: small;
  font-weight: bold; /* Negrita para el texto */
  cursor: grab; /* Cambia el cursor al pasar por encima */
  border: 2px solid #ffffff49;
}

.button:hover {
  border-color: white; 
}

.red {
  background-color: red;
  color: red; 
}

.green {
  background-color: green;
  color: green;
}

.blue {
  background-color: blue;
  color: blue;
}

.yellow {
  background-color: yellow;
  color: yellow;
}

.isSelected {
  animation: vibrarSeleccion 1s ease-in-out 1s infinite;
  box-shadow: 0 0 0.3em 0.3em currentColor; /* Hereda el color del contenedor */
  border-color: white;
  transition: border-color 0.3s ease-in-out;
}

.moveableSlot {
  border-color: white;
  box-shadow: 0 0 0.3em 0.3em currentColor;
}

.isAFormedFigure {
  border-color: rgb(21, 221, 228);
  animation: gentleBreathe 4s ease-in-out infinite;
}

.isSwapped {
  position: relative; /* Esto es necesario para centrar el círculo */
}

.isSwapped::before {
  content: ''; 
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Centra el círculo */
  width: 4px; /* Tamaño del círculo */
  height: 4px;
  background-color: white; /* Color del círculo */
  border-radius: 50%; /* Hace que sea un círculo */
  border: 2px solid rgb(231, 231, 231); /* Borde del círculo */
}

/* Estilo para cuando todas las clases están presentes */
.isSelected.isSwapped.isAFormedFigure {
  animation: vibrarSeleccion 1s ease-in-out infinite, gentleBreathe 4s ease-in-out infinite;
  box-shadow: 0 0 0.3em 0.3em rgb(21, 221, 228); /* El box-shadow del .isSelected + .isAFormedFigure */
  border-color: rgb(21, 221, 228); /* Color del borde de isAFormedFigure */
  position: relative; /* Mantener el círculo de isSwapped */
}

.isSelected.isSwapped.isAFormedFigure::before {
  content: ''; 
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 4px;
  height: 4px;
  background-color: white;
  border-radius: 50%;
  border: 2px solid rgb(231, 231, 231); /* Mantener el círculo de isSwapped */
}

/* Combinación cuando solo están isSelected e isSwapped */
.isSelected.isSwapped {
  animation: vibrarSeleccion 1s ease-in-out infinite;
  box-shadow: 0 0 0.3em 0.3em currentColor;
  position: relative;
}

.isSelected.isSwapped::before {
  content: ''; 
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 4px;
  height: 4px;
  background-color: white;
  border-radius: 50%;
  border: 2px solid rgb(231, 231, 231);
}

/* Combinación cuando solo están isSelected e isAFormedFigure */
.isSelected.isAFormedFigure {
  animation: vibrarSeleccion 1s ease-in-out infinite, gentleBreathe 4s ease-in-out infinite;
  border-color: rgb(21, 221, 228);
  box-shadow: 0 0 0.3em 0.3em rgb(21, 221, 228);
}

/* Combinación cuando solo están isSwapped e isAFormedFigure */
.isSwapped.isAFormedFigure {
  animation: gentleBreathe 4s ease-in-out infinite;
  border-color: rgb(21, 221, 228);
  position: relative;
}

.isSwapped.isAFormedFigure::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 4px;
  height: 4px;
  background-color: white;
  border-radius: 50%;
  border: 2px solid rgb(231, 231, 231);
}


@keyframes gentleBreathe {
  0% {
    box-shadow: 0 0 5px 2px rgb(21, 221, 228);
  }
  12.5% {
    box-shadow: 0 0 5.5px 2.25px rgb(21, 221, 228);
  }
  25% {
    box-shadow: 0 0 6px 2.5px rgb(21, 221, 228);
  }
  37.5% {
    box-shadow: 0 0 6.5px 2.75px rgb(21, 221, 228);
  }
  50% {
    box-shadow: 0 0 7px 3px rgb(21, 221, 228);
  }
  62.5% {
    box-shadow: 0 0 6.5px 2.75px rgb(21, 221, 228);
  }
  75% {
    box-shadow: 0 0 6px 2.5px rgb(21, 221, 228);
  }
  87.5% {
    box-shadow: 0 0 5.5px 2.25px rgb(21, 221, 228);
  }
  100% {
    box-shadow: 0 0 5px 2px rgb(21, 221, 228);
  }
}

@keyframes vibrarSeleccion {
  0% {
    transform: rotate(0deg);
  }
  10% {
    transform: rotate(-5deg);
  }
  30% {
    transform: rotate(0deg);
  }
  40% {
    transform: rotate(5deg);
  }
  50% {
    transform: rotate(0deg);
  }
  60% {
    transform: rotate(-5deg);
  }
}

.movError, .figError {
  animation: vibrarError 0.5s ease-in-out infinite;
}



@keyframes vibrarError {
  0% {
    transform: translateX(0);
    background-color: red;
  }
  12% {
    transform: translateX(-3px);
  }
  24% {
    transform: translateX(0);
  }
  36% {
    transform: translateX(3px);
  }
  48% {
    transform: translateX(0);
  }
  60% {
    transform: translateX(-3px);
  }
  72% {
    transform: translateX(0);
  }
  84% {
    transform: translateX(3px);
  }
  100% {
    transform: translateX(0);
    background-color: initial; 
  }
}

.isConnectedComponent {
  transform: scale(1.15);
}




